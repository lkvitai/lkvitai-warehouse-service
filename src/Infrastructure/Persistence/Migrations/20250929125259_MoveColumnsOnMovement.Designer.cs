// <auto-generated />
using System;
using Lkvitai.Warehouse.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Lkvitai.Warehouse.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(WarehouseDbContext))]
    [Migration("20250929125259_MoveColumnsOnMovement")]
    partial class MoveColumnsOnMovement
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("wh")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pgcrypto");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Lkvitai.Warehouse.Domain.Entities.Bin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("MetaJson")
                        .HasColumnType("jsonb");

                    b.Property<Guid>("WarehousePhysicalId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("WarehousePhysicalId", "Code")
                        .IsUnique();

                    b.ToTable("bin", "wh");
                });

            modelBuilder.Entity("Lkvitai.Warehouse.Domain.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("AttrsJson")
                        .HasColumnType("jsonb");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("UomBase")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.HasKey("Id");

                    b.HasIndex("Sku")
                        .IsUnique();

                    b.ToTable("item", "wh");
                });

            modelBuilder.Entity("Lkvitai.Warehouse.Domain.Entities.Movement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<Guid?>("BatchId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("BinId")
                        .HasColumnType("uuid");

                    b.Property<string>("DocNo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<decimal>("Factor")
                        .HasColumnType("numeric(18,6)");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid");

                    b.Property<string>("MetaJson")
                        .HasColumnType("jsonb");

                    b.Property<DateTimeOffset>("PerformedAt")
                        .HasColumnType("timestamptz");

                    b.Property<decimal>("QtyBase")
                        .HasColumnType("numeric(18,6)");

                    b.Property<string>("Reason")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Ref")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<Guid?>("ToBinId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ToWarehousePhysicalId")
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("Uom")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<Guid?>("WarehousePhysicalId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PerformedAt");

                    b.HasIndex("ItemId", "BinId", "BatchId");

                    b.HasIndex("ItemId", "ToBinId", "BatchId");

                    b.ToTable("movement", "wh");
                });

            modelBuilder.Entity("Lkvitai.Warehouse.Domain.Entities.StockBalance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<Guid?>("BatchId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("BinId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("QtyBase")
                        .HasColumnType("numeric(18,6)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamptz");

                    b.Property<Guid?>("WarehousePhysicalId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ItemId", "WarehousePhysicalId", "BinId", "BatchId")
                        .IsUnique();

                    b.ToTable("stock_balance", "wh");
                });

            modelBuilder.Entity("Lkvitai.Warehouse.Domain.Entities.WarehouseLogical", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("MetaJson")
                        .HasColumnType("jsonb");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Tags")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("warehouse_logical", "wh");
                });

            modelBuilder.Entity("Lkvitai.Warehouse.Domain.Entities.WarehousePhysical", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Address")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("LogicalId")
                        .HasColumnType("uuid");

                    b.Property<string>("MetaJson")
                        .HasColumnType("jsonb");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("LogicalId");

                    b.ToTable("warehouse_physical", "wh");
                });

            modelBuilder.Entity("Lkvitai.Warehouse.Domain.Entities.Bin", b =>
                {
                    b.HasOne("Lkvitai.Warehouse.Domain.Entities.WarehousePhysical", null)
                        .WithMany()
                        .HasForeignKey("WarehousePhysicalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lkvitai.Warehouse.Domain.Entities.WarehousePhysical", b =>
                {
                    b.HasOne("Lkvitai.Warehouse.Domain.Entities.WarehouseLogical", null)
                        .WithMany()
                        .HasForeignKey("LogicalId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
